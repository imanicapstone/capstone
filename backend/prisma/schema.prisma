// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String                @id
  email             String                @unique
  name              String?
  dateOfBirth       DateTime?
  salary            Float?
  ageRange          String?
  gender            String?
  occupation        String?
  createdAt         DateTime              @default(now())
  updatedAt         DateTime              @updatedAt
  plaidAccessToken  String?
  plaidItemId       String?
  bankConnected     Boolean   @default(false)

  transactions      Transaction[]
  financialGoals    FinancialGoal[]
}

model Transaction {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  amount          Float
  type            String
  category        String
  description     String?
  date            DateTime
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model FinancialGoal {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  title           String
  description     String
  targetAmount    Float
  currentAmount   Float     @default(0)
  deadline        DateTime
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Reminder {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  type            ReminderType
  title           String
  message         String
  isActive        Boolean     @default(true)
  hasBeenshown    Boolean     @default(false)
  triggeredAt     DateTime?  
  createdAt       DateTime  @updatedAt
  updatedAt       DateTime  @updatedAt
}

enum ReminderType {
  SPENDING_OVER_BUDGET
  GOAL_OFF_TRACK
  UNADDRESSED_REMINDERS
}


model Budget {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id])

  weekStart       DateTime      
  amount          Float

  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}