generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String          @id
  email            String          @unique
  name             String?
  dateOfBirth      DateTime?
  salary           Float?
  ageRange         String?
  gender           String?
  occupation       String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  bankConnected    Boolean         @default(false)
  plaidAccessToken String?
  plaidItemId      String?
  budgets          Budget[]
  financialGoals   FinancialGoal[]
  reminders        Reminder[]
  transactions     Transaction[]
  avoidedMerchants AvoidedMerchant[]
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String
  amount      Float
  type        String
  category    String
  description String?
  date        DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
}

model Budget {
  id         String   @id @default(cuid())
  userId     String
  amount     Float
  monthStart DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  
  @@unique([userId, monthStart])
}

model Reminder {
  id        String   @id @default(cuid())
  userId    String
  type      String
  title     String
  message   String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model FinancialGoal {
  id            String   @id @default(cuid())
  userId        String
  title         String
  description   String?
  targetAmount  Float
  currentAmount Float    @default(0)
  deadline      DateTime
  date          DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
}

model AvoidedMerchant {
  id        String   @id @default(cuid())
  userId    String
  merchantName String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  
  @@unique([userId, merchantName])
}